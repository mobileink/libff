load("@rules_foreign_cc//tools/build_defs:configure.bzl", "configure_make")

## MacOS: make sure the native clang tools (e.g. 'ar') are not shadowed by e.g. homebrew binutils.

configure_make(
    name = "openssl",
    configure_command = "config",
    configure_in_place = True,
    configure_env_vars = select({
        "//bzl/host:macos": {
            "AR": "",
            # "OSX_DEPLOYMENT_TARGET": "10.14"
        },
        "//conditions:default": {}
    }),
    configure_options = [
        # "no-weak-ssl-ciphers",
        # "no-idea",
        # "no-comp",
    ] + select({
        "//bzl/host:macos": [
            "ARFLAGS=r",
            # "no-shared",
            # "no-asm",
            # "no-afalgeng",
            # "enable-ec_nistp_64_gcc_128",
            # "no-ssl2",
            # "no-ssl3",
            ],
        "//conditions:default": [
            "shared",
        ]}
    ),
    # #defines = ["NDEBUG"], Don't know how to use -D; NDEBUG seems to be the default anyway
    lib_source = "@openssl//:all",
    out_lib_dir = "lib",
    shared_libraries = select({
        "//bzl/host:macos": ["libssl.dylib", "libcrypto.dylib"],
        "//bzl/host:linux": ["libssl.so", "libcrypto.so"],
        "//conditions:default": ["libssl.so", "libcrypto.so"]
    }),
    static_libraries = [
        "libssl.a",
        "libcrypto.a",
    ],
    visibility = ["//visibility:public"],
)

